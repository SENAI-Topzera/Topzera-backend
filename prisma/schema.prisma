generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_ADDRESS")
}

model CNH {
  id_cnh        Int       @id @default(autoincrement())
  data_nasc     DateTime? @db.Date
  rg            String?   @db.VarChar(8)
  num_registro  String?   @db.VarChar(11)
  num_cnh       String?   @db.VarChar(10)
  data_validade DateTime? @db.Date
  estado        String?   @db.Char(2)
  id_usuario    Int?
  usuario       User?     @relation("CNHTousuario", fields: [id_usuario], references: [id_usuario], onDelete: Restrict, onUpdate: Restrict, map: "fk_usuario_cnh")

  @@index([id_usuario], map: "fk_usuario_cnh")
}

model Car {
  id_carro                   Int           @id @default(autoincrement())
  marca                      String?       @db.VarChar(12)
  modelo                     String?       @db.VarChar(20)
  ano_modelo                 String?       @db.VarChar(8)
  cor                        String?       @db.VarChar(10)
  placa                      String?       @db.VarChar(8)
  tp_comb                    String?       @db.VarChar(8)
  tp_cambio                  String?       @db.VarChar(10)
  qtd_portas                 String?       @db.VarChar(5)
  qtd_lugares                String?       @db.VarChar(2)
  qtd_bagagem                String?       @db.VarChar(4)
  cod_renavam                String?       @db.VarChar(11)
  dat_disponibilidade_inic   DateTime?     @db.DateTime(0)
  dat_disponibilidade_fim    DateTime?     @db.DateTime(0)
  ind_status_disponibilidade Boolean?
  id_usuario                 Int?
  id_opcionais               Int?
  latitude                   String?       @db.VarChar(500)
  longitude                  String?       @db.VarChar(500)
  descricao                  String?       @db.VarChar(60)
  status                     String?       @db.VarChar(25)
  usuario                    User?         @relation("carroTousuario", fields: [id_usuario], references: [id_usuario], onDelete: Restrict, onUpdate: Restrict, map: "fk_usuarios")
  carro_imagens              CarImages[]   @relation("carroTocarro_imagens")
  locacao                    Rental[]      @relation("carroTolocacao")
  localizacao_carro          CarLocation[] @relation("carroTolocalizacao_carro")
  opcionais                  Optionals[]   @relation("carroToopcionais")

  @@index([id_usuario], map: "fk_usuarios")
  @@map("carro")
}

model Address {
  id_endereco Int    @id @default(autoincrement())
  cep         String @db.VarChar(8)
  logradouro  String @db.VarChar(60)
  numero      String @db.VarChar(6)
  bairro      String @db.VarChar(45)
  cidade      String @db.VarChar(45)
  estado      String @db.VarChar(45)
  id_usuario  Int?
  usuario     User?  @relation("enderecoTousuario", fields: [id_usuario], references: [id_usuario], onDelete: Restrict, onUpdate: Restrict, map: "fk_usuario")

  @@index([id_usuario], map: "fk_usuario")
  @@map("endereco")
}

model Rental {
  id_locacao                                        Int           @id @default(autoincrement())
  valor_hora                                        Decimal?      @db.Decimal(10, 2)
  valor_locacao                                     Decimal?      @db.Decimal(10, 2)
  local_retirada                                    String?       @db.VarChar(45)
  data_retirada                                     DateTime?     @db.DateTime(0)
  data_devolucao                                    DateTime?     @db.DateTime(0)
  id_carro                                          Int?
  id_usuario                                        Int?
  aceita                                            Boolean?
  carro                                             Car?          @relation("carroTolocacao", fields: [id_carro], references: [id_carro], onDelete: Restrict, onUpdate: Restrict, map: "fk_id_carros")
  usuario                                           User?         @relation("locacaoTousuario", fields: [id_usuario], references: [id_usuario], onDelete: Restrict, onUpdate: Restrict, map: "fk_usuarios_locacao")
  avalia_carro_avalia_carro_id_carroTolocacao       Car_Rating[]  @relation("avalia_carro_id_carroTolocacao")
  avalia_carro_avalia_carro_id_locacaoTolocacao     Car_Rating[]  @relation("avalia_carro_id_locacaoTolocacao")
  avalia_usuario_avalia_usuario_id_locacaoTolocacao User_Rating[] @relation("avalia_usuario_id_locacaoTolocacao")
  avalia_usuario_avalia_usuario_id_usuarioTolocacao User_Rating[] @relation("avalia_usuario_id_usuarioTolocacao")

  @@index([id_carro], map: "fk_id_carros")
  @@index([id_usuario], map: "fk_usuarios_locacao")
  @@map("locacao")
}

model Optionals {
  id_opcionais  Int      @id @default(autoincrement())
  ar_cond       Boolean?
  dir_hid       Boolean?
  abs           Boolean?
  trava_elet    Boolean?
  airbag        Boolean?
  teto_solar    Boolean?
  tracao        Boolean?
  ar_quenteFrio Boolean?
  vidro_elet    Boolean?
  comp_bord     Boolean?
  id_carro      Int?
  carro         Car?     @relation("carroToopcionais", fields: [id_carro], references: [id_carro], onDelete: Restrict, onUpdate: Restrict, map: "fk_id_carro")

  @@index([id_carro], map: "fk_id_carro")
  @@map("opcionais")
}

model User {
  id_usuario     Int       @id @default(autoincrement())
  nome_completo  String    @db.VarChar(70)
  nacionalidade  String?   @db.VarChar(50)
  genero         String?   @db.VarChar(11)
  telefone       String    @db.VarChar(11)
  email          String    @unique(map: "email_unico") @db.VarChar(45)
  senha          String    @db.VarChar(255)
  local_img_user String?   @db.VarChar(200)
  CPF            String    @unique(map: "CPF_unico") @db.VarChar(11)
  CNH            CNH[]     @relation("CNHTousuario")
  carro          Car[]     @relation("carroTousuario")
  endereco       Address[] @relation("enderecoTousuario")
  locacao        Rental[]  @relation("locacaoTousuario")

  @@map("usuario")
}

model Car_Rating {
  id_avalia_carro                          Int     @id
  comentario_avaliacao                     String? @db.VarChar(400)
  nota                                     Int?
  id_locacao                               Int?
  id_carro                                 Int?
  locacao_avalia_carro_id_carroTolocacao   Rental? @relation("avalia_carro_id_carroTolocacao", fields: [id_carro], references: [id_carro], onDelete: Restrict, onUpdate: Restrict, map: "fk_locacaoCarro")
  locacao_avalia_carro_id_locacaoTolocacao Rental? @relation("avalia_carro_id_locacaoTolocacao", fields: [id_locacao], references: [id_locacao], onDelete: Restrict, onUpdate: Restrict, map: "fk_locacao")

  @@index([id_locacao], map: "fk_locacao")
  @@index([id_carro], map: "fk_locacaoCarro")
  @@map("avalia_carro")
}

model User_Rating {
  id_avalia_usuario                          Int     @id @default(autoincrement())
  comentario_avaliacao                       String? @db.VarChar(400)
  nota                                       Int?
  id_usuario                                 Int?
  id_locacao                                 Int?
  locacao_avalia_usuario_id_locacaoTolocacao Rental? @relation("avalia_usuario_id_locacaoTolocacao", fields: [id_locacao], references: [id_locacao], onDelete: Restrict, onUpdate: Restrict, map: "fk_Id_Locacao")
  locacao_avalia_usuario_id_usuarioTolocacao Rental? @relation("avalia_usuario_id_usuarioTolocacao", fields: [id_usuario], references: [id_usuario], onDelete: Restrict, onUpdate: Restrict, map: "fk_usuariosLocacao")

  @@index([id_locacao], map: "fk_Id_Locacao")
  @@index([id_usuario], map: "fk_usuariosLocacao")
  @@map("avalia_usuario")
}

model CarLocation {
  id_localizacao_carro Int     @id @default(autoincrement())
  latitude             String? @db.VarChar(400)
  longitude            String? @db.VarChar(400)
  id_carro             Int?
  carro                Car?    @relation("carroTolocalizacao_carro", fields: [id_carro], references: [id_carro], onDelete: Restrict, onUpdate: Restrict, map: "fk_carro")

  @@index([id_carro], map: "id_carro_fk")
  @@map("localizacao_carro")
}

model CarImages {
  id_carro_imagens Int     @id @default(autoincrement())
  path_img_carro   String? @db.VarChar(400)
  id_carro         Int?
  carro            Car?    @relation("carroTocarro_imagens", fields: [id_carro], references: [id_carro], onDelete: Restrict, onUpdate: Restrict, map: "carro_id_fk")

  @@index([id_carro], map: "carro_id_fk")
  @@map("carro_imagens")
}
